{"version":3,"sources":["Components/Modal/Modal.js","Components/Product/Product.js","App.js","serviceWorker.js","index.js"],"names":["Modal","props","showModal","setState","modalStyle","closeModal","newTask","name","img","price","details","id","newProduct","e","a","state","target","value","inputAreEmpty","text","fieldText","key","push","inputField","includes","addTaskToFolder","this","onClick","style","display","className","htmlFor","type","placeholder","onChange","React","Component","Product","good","removeProduct","pinToTop","src","alt","App","filter","toLowerCase","document","querySelectorAll","forEach","item","innerHTML","indexOf","val","Math","floor","random","updateGoods","goods","update","prevState","topElementId","pinnedItem","find","goodsList","onKeyUp","map","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.decbfa77.chunk.js","sourcesContent":["import React from 'react';\nimport './Modal.css';\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modalStyle: 'none',\n      newTask: {\n        name: '',\n        img: '',\n        price: '',\n        details: '',\n        id: '1',\n      },\n      inputField: true,\n    };\n  }\n\n  showModal = () => {\n    this.setState({\n      modalStyle: 'block',\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      newTask: {\n        name: ' ',\n        img: ' ',\n        price: ' ',\n        details: ' ',\n        id: ' ',\n      },\n      modalStyle: 'none',\n    });\n  };\n\n  newProduct = (e) => {\n    let a = this.state.newTask;\n    a[e.target.id] = e.target.value;\n\n    this.setState({\n      newTask: a,\n    });\n\n    this.inputAreEmpty();\n  };\n\n  inputAreEmpty = () => {\n    let text = this.state.newTask;\n    let fieldText = [];\n    for (let key in text) {\n      fieldText.push(text[key]);\n    }\n    this.setState({\n      inputField: fieldText.includes(''),\n    });\n  };\n\n  render() {\n    const { addTaskToFolder } = this.props;\n    return (\n      <div>\n        <button id=\"modal-add-product\" onClick={this.showModal}>\n          Add product\n        </button>\n\n        <div id=\"modal-back-ground\" style={{ display: this.state.modalStyle }}>\n          <div className=\"modal-content\">\n            <button id=\"close-modal-window\" onClick={this.closeModal}>\n              X\n            </button>\n\n            <label htmlFor=\"name\">Product title</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              placeholder=\"title...\"\n              value={this.state.newTask.name}\n              onChange={this.newProduct}\n            />\n\n            <label htmlFor=\"img\">Image link</label>\n            <input\n              type=\"text\"\n              id=\"img\"\n              placeholder=\"link to the picture...\"\n              value={this.state.newTask.img}\n              onChange={this.newProduct}\n            />\n\n            <label htmlFor=\"details\">Product descriptions</label>\n            <input\n              type=\"text\"\n              id=\"details\"\n              placeholder=\"descriptions...\"\n              value={this.state.newTask.details}\n              onChange={this.newProduct}\n            />\n\n            <label htmlFor=\"price\">Product price</label>\n            <input\n              type=\"text\"\n              id=\"price\"\n              placeholder=\"price... \"\n              value={this.state.newTask.price}\n              onChange={this.newProduct}\n            />\n\n            {this.state.inputField === false ? (\n              <button\n                onClick={() => {\n                  addTaskToFolder(this.state.newTask);\n                  this.closeModal();\n                }}\n                id=\"add-product-to-gallery\"\n              >\n                {' '}\n                add{' '}\n              </button>\n            ) : (\n              <p id=\"errorMessage\"> Some field is empty ... </p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React from 'react';\nimport './Product.css';\n\nfunction Product(props) {\n  const { good, removeProduct, pinToTop } = props;\n  return (\n    <div className=\"card\">\n      <img src={good.img} alt={good.name} />\n      <p className=\"product-details\">{good.details} </p>\n      <div className=\"bottom-card-text\">\n        <p className=\"price\"> {good.price + ' $'}</p>\n        <p className=\"product-title\"> {good.name}</p>\n      </div>\n      <button\n        className=\"remove-product\"\n        onClick={() => {\n          removeProduct(good);\n        }}\n      >\n        Ð¥\n      </button>\n      <button\n        className=\"to-top\"\n        onClick={() => {\n          pinToTop(good.id);\n        }}\n      >\n        top\n      </button>\n    </div>\n  );\n}\nexport default Product;\n","import React from 'react';\nimport './App.css';\nimport Modal from './Components/Modal/Modal';\nimport Product from './Components/Product/Product';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      goods: [\n        {\n          name: 'mercedes',\n          id: 1,\n          price: '22700',\n          details: 'mercedes ml450 amg',\n          img:\n            'https://cdn0.riastatic.com/photos/ir/new/auto/photo/mercedes-benz_gls-350__317269940-620x415x70.jpg',\n        },\n        {\n          name: 'audi',\n          id: 2,\n          price: '66220',\n          details: 'audi Q7 rs 2013',\n          img:\n            'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSEpuTUzBy1fm7sPB9cNCMZOV2uojPhwxrrNjlg1iEaC09xigE_&usqp=CAU',\n        },\n        {\n          name: 'ASUS Laptop',\n          id: 55,\n          price: '312',\n          details: 'Acer Aspire 5 Slim Laptop, 15.6 inches Full HD',\n          img: 'https://images-na.ssl-images-amazon.com/images/I/71vvXGmdKWL._AC_SL1500_.jpg',\n        },\n        {\n          name: 'Nike Air Max 270',\n          id: 5,\n          price: '55',\n          details: 'Nike Air Max 270 mans,from USA',\n          img:\n            'https://beshop.com.ua/upload/resize/510408/krossovki_nike_air_max_720_city_black.jpeg',\n        },\n      ],\n      topElementId: null,\n    };\n  }\n\n  filter = (e) => {\n    let input = e.target;\n    let filter = input.value.toLowerCase();\n    let filterItems = document.querySelectorAll('.card');\n\n    filterItems.forEach((item) => {\n      if (item.innerHTML.toLowerCase().indexOf(filter) > -1) {\n        item.style.display = '';\n      } else {\n        item.style.display = 'none';\n      }\n    });\n  };\n\n  addTaskToFolder = (val) => {\n    val.id = +`${Math.floor(Math.random() * 1000)}`;\n\n    const updateGoods = [...this.state.goods, val];\n\n    this.setState({\n      goods: updateGoods,\n    });\n  };\n\n  removeProduct = (good) => {\n    const update = this.state.goods.filter(function (item) {\n      return item.id !== good.id;\n    });\n    this.setState({\n      goods: update,\n    });\n  };\n\n  pinToTop = (id) => {\n    this.setState((prevState) => ({\n      topElementId: prevState.topElementId === id ? null : id,\n    }));\n  };\n\n  render() {\n    const pinnedItem = this.state.goods.find((good) => good.id === this.state.topElementId);\n    const goodsList = this.state.goods.filter((good) => good.id !== this.state.topElementId);\n\n    return (\n      <div className=\"App\">\n        <Modal addTaskToFolder={this.addTaskToFolder} />\n\n        <header>\n          <input type=\"text\" id=\"search\" onKeyUp={this.filter} placeholder=\"Search...\" />\n        </header>\n\n        <section className=\"gallery\">\n          {pinnedItem && (\n            <Product\n              good={pinnedItem}\n              removeProduct={this.removeProduct}\n              pinToTop={this.pinToTop}\n            />\n          )}\n\n          {goodsList.map((good) => {\n            return (\n              <Product\n                key={good.id}\n                good={good}\n                removeProduct={this.removeProduct}\n                pinToTop={this.pinToTop}\n              />\n            );\n          })}\n        </section>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}