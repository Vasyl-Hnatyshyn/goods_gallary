{"version":3,"sources":["Components/Modal/Modal.js","Components/Product/Product.js","App.js","serviceWorker.js","index.js"],"names":["Modal","props","showModal","setState","modalStyle","closeModal","newTask","name","img","price","details","id","newProduct","e","a","state","target","value","inputAreEmpty","text","fieldText","key","push","inputField","includes","addTaskToFolder","this","onClick","style","display","className","htmlFor","type","placeholder","onChange","React","Component","Product","good","removeProduct","pinToTop","src","alt","App","filter","toLowerCase","document","querySelectorAll","forEach","item","innerHTML","indexOf","val","Math","floor","random","updateGoods","goods","update","prevState","topElementId","pinnedItem","find","goodsList","onKeyUp","map","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5ac420c7.chunk.js","sourcesContent":["import React from 'react';\nimport './Modal.css';\n\nclass Modal extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            modalStyle:\"none\",\n            newTask: {\n                name:\"\",\n                img:\"\",\n                price:\"\",\n                details:\"\",\n                id:\"1\"\n            },\n            inputField: true,\n        };\n\n    }\n\n\n    showModal=()=>{\n        this.setState({\n\n            modalStyle:\"block\",\n\n        })\n    }\n\n    closeModal=()=> {\n        this.setState({\n            newTask: {\n                name:\" \",\n                img:\" \",\n                price:\" \",\n                details:\" \",\n                id:\" \"\n            },\n            modalStyle:\"none\",\n        })\n    }\n\n    newProduct=(e)=>{\n         let a =this.state.newTask;\n         a[e.target.id]= e.target.value;\n\n        this.setState({\n            newTask:a\n        })\n\n      this.inputAreEmpty();\n\n    }\n\n\n    inputAreEmpty=()=>{\n        let text = this.state.newTask;\n        let fieldText=[];\n        for(let key in text){\n            fieldText.push(text[key])\n            }\n        this.setState({\n            inputField:fieldText.includes(\"\")\n        })\n\n\n        }\n\n\n\n\n    render () {\n        const {addTaskToFolder}=this.props\n        return(\n            <div>\n                <button id=\"modal-add-product\"  onClick={this.showModal} >Add product</button>\n\n\n                <div id=\"modal-back-ground\" style={{display:this.state.modalStyle}}>\n\n\n\n\n                    <div className=\"modal-content\"  >\n\n                        <button  id=\"close-modal-window\" onClick={ this.closeModal}>X</button>\n\n                        <label htmlFor=\"name\" >Product title</label>\n                        <input type=\"text\" id=\"name\" placeholder=\"title...\"  value={this.state.newTask.name} onChange={this.newProduct}/>\n\n                        <label htmlFor=\"img\" >Image link</label>\n                        <input type=\"text\" id=\"img\" placeholder=\"link to the picture...\"   value={this.state.newTask.img}  onChange={this.newProduct}  />\n\n                        <label htmlFor=\"details\" >Product descriptions</label>\n                        <input type=\"text\" id=\"details\" placeholder=\"descriptions...\"  value={this.state.newTask.details} onChange={this.newProduct}  />\n\n                        <label htmlFor=\"price\" >Product price</label>\n                        <input type=\"text\" id=\"price\" placeholder=\"price... \" value={this.state.newTask.price}  onChange={this.newProduct}  />\n\n                        {this.state.inputField === false ?\n                            <button onClick={()=>{\n                                addTaskToFolder(this.state.newTask);\n                                this.closeModal();\n                            }} id =\"add-product-to-gallery\"> add </button>:\n                            <p id=\"errorMessage\"> Some field is empty ...  </p>}\n\n                    </div>\n\n                </div>\n\n            </div>\n\n        )}\n}\n\nexport default Modal;\n","import React from 'react';\nimport './Product.css';\n\n\nclass Product extends React.Component {\n\n    render() {\n const {good,removeProduct,pinToTop}=this.props\n        return (\n\n\n           <div className=\"card\" >\n\n                 <img src={good.img} alt={good.name}/>\n                 <p className=\"product-details\">{good.details} </p>\n                  <div className=\"bottom-card-text\">\n                 <p className=\"price\">  {good.price + \" $\"}</p>\n                 <p className=\"product-title\"> {good.name}</p>\n                  </div>\n                 <button className=\"remove-product\" onClick={()=>{removeProduct(good)} }>Ð¥</button>\n                 <button className=\"to-top\" onClick={()=>{pinToTop(good.id)} }>top</button>\n              </div>\n        )\n    }\n}\nexport default Product;","import React from 'react';\nimport './App.css';\nimport Modal from './Components/Modal/Modal';\nimport Product from  './Components/Product/Product';\n\n\n\nclass App extends React.Component {\n    constructor(){\n       super();\n       this.state = {\n           goods:[{name:\"mercedes\",id:1, price: \"22700\",details:\"mercedes ml450 amg\", img:\"https://cdn0.riastatic.com/photos/ir/new/auto/photo/mercedes-benz_gls-350__317269940-620x415x70.jpg\"},\n               {name:\"audi\",id:2,price: \"66220\",details:\"audi Q7 rs 2013\", img:\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSEpuTUzBy1fm7sPB9cNCMZOV2uojPhwxrrNjlg1iEaC09xigE_&usqp=CAU\"},\n               {name:\"ASUS Laptop\",id:55,price: \"312\",details:\"Acer Aspire 5 Slim Laptop, 15.6 inches Full HD\", img:\"https://images-na.ssl-images-amazon.com/images/I/71vvXGmdKWL._AC_SL1500_.jpg\"},\n               {name:\"Nike Air Max 270\",id:5,price: \"55\",details:\"Nike Air Max 270 mans,from USA\", img:\"https://beshop.com.ua/upload/resize/510408/krossovki_nike_air_max_720_city_black.jpeg\"},\n                ],\n           topElementId: null,\n       }\n    }\n\n\n\n    filter=(e)=> {\n\n        let input = e.target;\n        let filter = input.value.toLowerCase();\n        let filterItems = document.querySelectorAll('.card');\n\n        filterItems.forEach(item => {\n\n            if (item.innerHTML.toLowerCase().indexOf(filter) > -1) {\n                item.style.display = '';\n            } else {\n                item.style.display = 'none';\n            }\n        })\n    }\n\n     addTaskToFolder=val=> {\n\n         val.id= +`${Math.floor(Math.random() * 1000)}`;\n\n        const updateGoods = [...this.state.goods,val];\n\n        this.setState({\n            goods:updateGoods\n        })\n    }\n\n    removeProduct=good=>{\n        const update = this.state.goods.filter(function(item){\n        return item.id !== good.id;\n        })\n        this.setState({\n            goods:update\n        })\n    }\n\n    pinToTop = id => {\n        this.setState((prevState) => ({\n            topElementId: prevState. topElementId === id ? null : id\n        }))\n    }\n\n    render() {\n\n        const pinnedItem = this.state.goods.find(good => good.id === this.state.topElementId);\n        const goodsList = this.state.goods.filter(good => good.id !== this.state.topElementId);\n\n    return (\n\n        <div className = \"App\">\n\n           <Modal  addTaskToFolder={this.addTaskToFolder}/>\n\n            <header>\n                <input\n                type=\"text\"\n                id=\"search\"\n                onKeyUp={this.filter}\n                placeholder=\"Search...\"/>\n\n            </header>\n\n       <section className=\"gallery\">\n           {pinnedItem &&<Product\n               good={pinnedItem}\n               removeProduct={this.removeProduct}\n               pinToTop={this.pinToTop}\n           />}\n\n           {goodsList.map((good)=>{\n                   return (\n                       <Product\n                        key={good.id}\n                        good={good}\n                        removeProduct={this.removeProduct}\n                        pinToTop={this.pinToTop}\n                       />\n                   )\n           })\n           }\n      </section>\n      </div>\n        \n    );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}